{"version":3,"sources":["../../../../src/js/components/Terminal/terminal-utils.js"],"names":["pluginMap","plugins","eachHandler","map","plugin","class","config","forEach","pluginObj","uuidv4","replace","c","r","random","v","toString","getShortcuts","shortcuts","obj","Object","keys","key","split","toLowerCase","osName","os","modCommands","commands","newCommands","name","needsInstance","definition","method","parse","i","cmd","options","e","Error","help","version"],"mappings":"wdAKgBA,S,CAAT,SAAmBC,OAAnB,CAA4BC,WAA5B,CAAyC,CAC9C,MAAOD,SAAQE,GAAR,CAAY,SAACC,MAAD,CAAY,CAO7B,MANsB,UAAlB,QAAOA,OAMX,GALEA,OAAS,CACPC,MAAOD,MADA,CAEPE,aAFO,CAKX,EAAOF,MACR,CARM,EAQJG,OARI,CAQI,0BAAaL,aAAYM,UAAUH,KAAtB,CAA6BG,UAAUF,MAAvC,CAAb,CARJ,CASR,C,SAEeG,M,CAAT,UAAkB,CACvB,MAAO,uCAAuCC,OAAvC,CAA+C,OAA/C,CAAwD,SAACC,CAAD,CAAO,CACpE,GAAMC,GAAyB,CAArB,CAAgB,EAAhB,MAAKC,MAAL,EAAV,CACMC,EAAU,GAAN,KAAYF,CAAZ,CAAiB,KAD3B,CAEA,MAAOE,GAAEC,QAAF,CAAW,EAAX,CACR,CAJM,CAKR,C,SAEeC,Y,CAAT,SAAsBC,SAAtB,CAAiCC,GAAjC,CAAsC,CAc3C,MAbmB,QAAf,uBAAOA,IAAP,qBAAOA,GAAP,EAaJ,EAZEC,OAAOC,IAAP,CAAYF,GAAZ,EAAiBX,OAAjB,CAAyB,SAACc,GAAD,CAAS,CAChC,GAAMC,OAAQD,IAAIE,WAAJ,GAAkBb,OAAlB,CAA0B,KAA1B,CAAiC,EAAjC,EAAqCY,KAArC,CAA2C,GAA3C,CAAd,CACAA,MAAMf,OAAN,CAAc,SAACiB,MAAD,CAAY,CACpBA,SAAWC,EADS,GAEtBR,sBACKA,SADL,CAEKC,IAAIG,GAAJ,CAFL,CAFsB,CAOzB,CAPD,CAQD,CAVD,CAYF,CAAOJ,SACR,C,SAEeS,W,CAAT,SAAqBC,QAArB,CAA+B,CACpC,GAAMC,aAAc,EAApB,CAmCA,MAjCAT,QAAOC,IAAP,CAAYO,QAAZ,EAAsBpB,OAAtB,CAA8B,SAACsB,IAAD,CAAU,CACtC,GAAIC,iBAAJ,CACMC,WAAaJ,SAASE,IAAT,CADnB,CAEIG,OAASD,UAFb,CAGIE,MAAQ,kBAAKC,EAAL,CAHZ,CAIA,GAA0B,WAAtB,QAAOH,WAAX,CAAuC,CACrC,GAA0B,QAAtB,uBAAOA,WAAP,qBAAOA,UAAP,EAAJ,CAAoC,CAClC,GAAMI,KAAM,mBAAZ,CACA,GAAkC,WAA9B,QAAOJ,YAAWK,OAAtB,CACE,GAAI,CACFD,IAAIC,OAAJ,CAAYL,WAAWK,OAAvB,CACD,CAAC,MAAOC,CAAP,CAAU,CACV,KAAM,IAAIC,MAAJ,CAAU,kCAAV,CACP,CAEHL,MAAQ,kBACNE,KAAIF,KAAJ,CAAUC,CAAV,CAAa,CACXL,SADW,CAEXU,OAFW,CAGXC,UAHW,CAAb,CADM,CAT0B,CAelCR,OAASD,WAAWC,MAfc,CAgBlCF,cAAgBC,WAAWD,aAAX,IACjB,CAEDF,YAAYC,IAAZ,EAAoB,CAClBI,WADkB,CAElBD,aAFkB,CAGlBF,2BAHkB,CAKrB,CACF,CA/BD,CAiCA,CAAOF,WACR,C,ygBA5EYH,cAAK,kB","file":"terminal-utils.js","sourcesContent":["import Command from '../../args/index';\nimport { getOs } from '../../utils';\n\nexport const os = getOs();\n\nexport function pluginMap(plugins, eachHandler) {\n  return plugins.map((plugin) => {\n    if (typeof plugin === 'function') {\n      plugin = {\n        class: plugin,\n        config: undefined,\n      };\n    }\n    return plugin;\n  }).forEach(pluginObj => eachHandler(pluginObj.class, pluginObj.config));\n}\n\nexport function uuidv4() {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n    const r = Math.random() * 16 | 0; // eslint-disable-line no-bitwise\n    const v = c === 'x' ? r : (r & 0x3 | 0x8); // eslint-disable-line\n    return v.toString(16);\n  });\n}\n\nexport function getShortcuts(shortcuts, obj) {\n  if (typeof obj === 'object') {\n    Object.keys(obj).forEach((key) => {\n      const split = key.toLowerCase().replace(/\\s/g, '').split(',');\n      split.forEach((osName) => {\n        if (osName === os) {\n          shortcuts = {\n            ...shortcuts,\n            ...obj[key],\n          };\n        }\n      });\n    });\n  }\n  return shortcuts;\n}\n\nexport function modCommands(commands) {\n  const newCommands = {};\n\n  Object.keys(commands).forEach((name) => {\n    let needsInstance = false;\n    const definition = commands[name];\n    let method = definition;\n    let parse = i => i;\n    if (typeof definition !== 'undefined') {\n      if (typeof definition === 'object') {\n        const cmd = new Command();\n        if (typeof definition.options !== 'undefined') {\n          try {\n            cmd.options(definition.options);\n          } catch (e) {\n            throw new Error('options for command wrong format');\n          }\n        }\n        parse = i =>\n          cmd.parse(i, {\n            name,\n            help: true,\n            version: false,\n          });\n        method = definition.method; // eslint-disable-line\n        needsInstance = definition.needsInstance || false;\n      }\n\n      newCommands[name] = {\n        parse,\n        method,\n        needsInstance,\n      };\n    }\n  });\n\n  return newCommands;\n}\n"]}